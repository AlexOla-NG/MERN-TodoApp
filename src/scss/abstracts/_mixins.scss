// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
	@if $self {
		&,
		&:hover,
		&:active,
		&:focus,
		&:focus-within {
			@content;
		}
	} @else {
		&:hover,
		&:active,
		&:focus,
		&:focus-within {
			@content;
		}
	}
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
	#{$context} & {
		@content;
	}
}

// STUB: create mixin returns responsive font size
@mixin resize($size-name) {
	$result: map-get($font-sizes, $size-name);
	font-size: $result;

	@media only screen and (min-width: 2560px) {
		$result: map-get($font-sizes, $size-name) + 0.5; // increase font size by 0.5
		font-size: $result;
	}
}

// STUB: create flex mixin
@mixin flex-col {
	display: flex;
	flex-direction: column;
}
@mixin flex-row {
	display: flex;
	flex-direction: row;
}

// STUB: create media-query mixin
@mixin media-md {
	@media screen and (min-width: 768px) {
		@content;
	}
}

@mixin media-lg {
	@media screen and (min-width: 1024px) {
		@content;
	}
}

@mixin media-xxl {
	@media screen and (min-width: 2560px) {
		@content;
	}
}
